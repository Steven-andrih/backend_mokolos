"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ei=02k+0@5gfa7(5cd04e03qu3^_(&ac=ws#o!yah4piwemkzr'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "unfold",  # before django.contrib.admin
    "unfold.contrib.simple_history",
    "simple_history",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'rest_framework_simplejwt',
    'djoser',
    'drf_spectacular',
    'drf_spectacular_sidecar',  # required for Django collectstatic discovery
    'corsheaders',


    'users',

    'permissions',
    'holydays',
    'comments',
    'solds',

    'abouts',
    'banners',
    'contacts',
    'faqs',
    'sections',
    'services',
    'siteImages',
    'technologys',
    'core_admin',
]

MIDDLEWARE = [
    'simple_history.middleware.HistoryRequestMiddleware',
    # Config for CORS 
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),

    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',

}

from datetime import timedelta

SIMPLE_JWT = {
    'AUTH_HEADER_TYPES': ('Bearer',),
    'ACCESS_TOKEN_LIFETIME': timedelta(days=120),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=120),
}

AUTH_USER_MODEL = 'users.User'  # on va créer un User personnalisé

DJOSER = {
    'LOGIN_FIELD': 'email',
    'USER_CREATE_PASSWORD_RETYPE': True,
    'SEND_ACTIVATION_EMAIL': False,
    'PASSWORD_RESET_CONFIRM_URL': 'password/reset/confirm/{uid}/{token}',
    'SERIALIZERS': {
        'user_create': 'users.serializers.RegisterSerializer',
        'user': 'users.serializers.UserSerializer',
        'current_user': 'users.serializers.UserSerializer',
    },
}

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

EMAIL_HOST_USER = 'steevandrih@gmail.com'
EMAIL_HOST_PASSWORD = 'pqou okfu dkdd gofc'  # ⚠️ celui généré par Google !
DEFAULT_FROM_EMAIL = 'steevandrih@gmail.com'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # Dossier contenant tes templates HTML
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

SPECTACULAR_SETTINGS = {
    'TITLE': 'Mokolos Django API',
    'DESCRIPTION': 'Recreation de l\'ancien API en Symfony en Django',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,

    'SWAGGER_UI_DIST': 'SIDECAR',  # shorthand to use the sidecar instead
    'SWAGGER_UI_FAVICON_HREF': 'SIDECAR',
    'REDOC_DIST': 'SIDECAR',
    # OTHER SETTINGS
}

CORS_ALLOWED_ORIGINS = [
    'http://localhost:5173',
]

CORS_ALLOW_ALL_ORIGINS = True

from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _
from django.templatetags.static import static

# === Fonctions pour badges dynamiques ===

def badge_images(request):
    """Nombre total d'images"""
    return SiteImage.objects.count()

def badge_contacts_non_lus(request):
    """Nombre de contacts non lus (à adapter selon ton modèle)"""
    return Contact.objects.filter(is_read=False).count() if hasattr(Contact, 'is_read') else Contact.objects.count()

def badge_banners(request):
    """Nombre de bannières actives"""
    return Banner.objects.filter(auto_play=True).count()

def badge_services(request):
    """Nombre total de services"""
    return Service.objects.count()


# === CONFIG UNFOLD ===

UNFOLD = {
    "SITE_TITLE": "Administration Mokolos",
    "SITE_HEADER": "Mokolos Admin",
    "SITE_SUBHEADER": "Tableau de bord",
    "SITE_SYMBOL": "dashboard",
    "SITE_DROPDOWN": [
            {
                "icon": "diamond",
                "title": _("Ouvrir le site MOKOLOS"),
                "link": "https://example.com",
            },
    ],
        "SITE_URL": "https://example.com",
    
    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": False,

        "navigation": [
            # ==== MÉDIAS ====
            {
                "title": _("Médias"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": _("Images"),
                        "icon": "image",
                        "link": reverse_lazy("admin:siteImages_siteimage_changelist"),
                        "badge": badge_images,
                    },
                ],
            },

            # ==== CONTENU VITRINE ====
            {
                "title": _("Contenu Vitrine"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": _("About"),
                        "icon": "info",
                        "link": reverse_lazy("admin:abouts_about_changelist"),
                    },
                    {
                        "title": _("About Traductions"),
                        "icon": "translate",
                        "link": reverse_lazy("admin:abouts_abouttranslation_changelist"),
                    },
                    {
                        "title": _("Bannières"),
                        "icon": "slideshow",
                        "link": reverse_lazy("admin:banners_banner_changelist"),
                        "badge": badge_banners,
                    },
                    {
                        "title": _("Bannière Items"),
                        "icon": "image",
                        "link": reverse_lazy("admin:banners_banneritem_changelist"),
                    },
                    {
                        "title": _("Services"),
                        "icon": "build",
                        "link": reverse_lazy("admin:services_service_changelist"),
                        "badge": badge_services,
                    },
                    {
                        "title": _("Services Traductions"),
                        "icon": "translate",
                        "link": reverse_lazy("admin:services_servicetranslation_changelist"),
                    },
                    {
                        "title": _("Sections"),
                        "icon": "view_agenda",
                        "link": reverse_lazy("admin:sections_section_changelist"),
                    },
                    {
                        "title": _("Sections Traductions"),
                        "icon": "translate",
                        "link": reverse_lazy("admin:sections_sectiontranslation_changelist"),
                    },
                    {
                        "title": _("FAQ"),
                        "icon": "help",
                        "link": reverse_lazy("admin:faqs_faq_changelist"),
                    },
                    {
                        "title": _("FAQ Traductions"),
                        "icon": "translate",
                        "link": reverse_lazy("admin:faqs_faqtranslation_changelist"),
                    },
                    {
                        "title": _("Technologies"),
                        "icon": "memory",
                        "link": reverse_lazy("admin:technologys_technology_changelist"),
                    },
                ],
            },

            # ==== FORMULAIRES ====
            {
                "title": _("Formulaires"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": _("Contacts"),
                        "icon": "contact_mail",
                        "link": reverse_lazy("admin:contacts_contact_changelist"),
                        "badge": badge_contacts_non_lus,
                    },
                ],
            },
        ],
    },
}
